#imports go here
#importing alphabet
import string
#importing time-which gives the illusion of a delay in program
from time import sleep

#for system exit
import sys

#import alphabet- lowercase and uppercase
alphabet_lower = string.ascii_lowercase #abcdefghijklmnopqrstuvwxyz
alphabet_upper = string.ascii_uppercase #ABCEDFGHIJKLMNOPQRSTUVWXYZ

alphabet_lower_list = list(alphabet_lower)  # ['a', 'b', 'c', 'd', ..., 'z']
alphabet_upper_list = list(alphabet_upper)  # ['A', 'B', 'C', 'D', ..., 'Z']



#functions go here

def banner():
    #Print instructions and a little definition
    print()
    print("A Caesar cipher is a simple method of encoding messages. \n" 
      "Caesar ciphers use a substitution method where letters in the "
      "alphabet are shifted by a given value.")
    sleep(2)
    print()
    sleep(2)
    print("Encryption is the method by which information is converted \n"
          "into secret code that hides the information's true meaning.")
    print()
    print("The encrypted message is called the ciphertext message.")
    print()
    sleep(2)
    print("Decryption is the process of converting an encrypted message \n"
          "back to its readble format, which is called plaintext. \n")
    print()
    
    sleep(2)
    print ("A shift in cipher involves replacing each letter in the message by a letter \n"
           "that is some fixed number of positions further along in the alphabet. ")
    sleep(2)
    print()
    print("Choose either encryption or decryption, and enter a value for the shift.")
    print()
    sleep(2)

#a banner displayed at the beginning of the program
    print()
    print ("********************************************")
    print("**Welcome to Sandy's Caesar Cipher Solver!**")
    print("*********************************************") 
    print()
    sleep(2)


#function for decrypting text- transform encrypted text to plain text
def decrypt_text ():
    user_encrypted_text = input("Enter the text you would like to decrypt: ").strip()
    print ()
    shift = cipher_shift ()

    plain_text = ""
    
    for char in user_encrypted_text:
        if char in alphabet_lower:
            current_position = alphabet_lower.find(char)
            new_position = (current_position - shift) % 26
            new_letter = alphabet_lower[new_position]
            plain_text += new_letter

        elif char in alphabet_upper:
            current_position = alphabet_upper.find(char)
            new_position = (current_position - shift) % 26
            new_letter = alphabet_upper[new_position]
            plain_text += new_letter
        
        else:
            plain_text += char

    #decrypted text is shown  
    print()      
    sleep (2)
    print ("Finalizing decryption....")
    print ()
    sleep(2)
    print ("Your decrypted message is....")
    sleep(2)
    print ()
    print(plain_text)
    print()

#function for encrpytion- plain text to caesar cipher text
def encrypt_text ():
    user_plain_text = input("Enter the text you would like to encrypt: ").strip()
    print ()
    shift = cipher_shift ()

    cipher_text = ""
    
    for char in user_plain_text:
        if char in alphabet_lower:
            current_position = alphabet_lower.find(char)
            new_position = (current_position + shift) % 26
            new_letter = alphabet_lower[new_position]
            cipher_text += new_letter

        elif char in alphabet_upper:
            current_position = alphabet_upper.find(char)
            new_position = (current_position + shift) % 26
            new_letter = alphabet_upper[new_position]
            cipher_text += new_letter
        
        else:
            cipher_text += char
     #encrypted text output
    print()
    sleep (2)
    print("Finalizing encryption....")
    sleep(2)
    print()
    print("Your encrypted message is....")
    sleep(2)
    print()
    print(cipher_text)
    print()

#function for making sure the user enters a number between 1 to 26
def cipher_shift():
    #error message
    error = "ERROR! You must enter a number between 1 and 26!"
    while True:
        try:
            shift = int(input("Enter the shift between 1 and 26: "))
            if shift >= 1 and shift <= 26:
                return shift
            else:
                print(error)
                print()
        except ValueError:
            print(error)
            print()



#function for asking the user for input and making sure entered input is correct
def user_interface ():
    #main menu
    while True:
        user_input = input("Would you like to encrypt or decrypt text? (enter e/ d): ").lower()
        if user_input in ["e","d","encrypt","decrypt"]:
            return user_input
        else:
            print()
            print("SORRY! Please enter a valid answer.")
            print()


#function for confirming user decisions + letting them exit the code
def confirm_user_choice():
   user_choice = user_interface ()
   if user_choice in ["encrypt", "e"]:
       sleep(2)
       print()
       print("You have chosen \n ***encryption***!")
       print()
   elif user_choice in ["decrypt", "d"]:
       sleep(2)
       print()
       print("You have chosen \n ***decryption***!")
       print()

   while True:
        confirm = input ("Do you confirm this choice? (yes/ no):" ).lower() 
        if confirm in ["yes", "y"]:
            if user_choice in ["decrypt", "d"]:
                print()
                decrypt_text()  
                
            elif user_choice in ["encrypt", "e"]:
                sleep(2)
                print()
                encrypt_text()
            break
            
        elif confirm in ["no", "n"]:
            while True: 
                print("Would you like to \n"
                     "01. Return to the main menu \n "
                     "02. Exit Sandy's Caesar cipher solver")
                num_choice = int(input("Enter either 1 or 2: "))
                input_error = "INVALID! Please enter either 1 or 2"
        
                if num_choice == 1:
                    print ("Returning to main menu...")
                    sleep(2)
                    return 
                elif num_choice == 2:
                    print("GOODBYE! Exiting Sandy's Caesar cipher solver now...")
                    sleep(2)
                    sys.exit()
                else:
                    print(input_error)
                        
        else:
            print ("SORRY! Please enter a valid answer")
            print()

def main():
    banner()
    while True:
        confirm_user_choice ()
        sleep(2)
        sys.exit()

main()

                    
                       




